#ifndef $INSERT_NAME$_h
#define $INSERT_NAME$_h

$INSERT_DEFINES$

typedef struct {
    double z[dim+n_s]; // Optimal z
    double s[dim+n_s]; // Optimal s
    double z_hat[dim+n_s]; // Optimal z_hat
    double s_hat[dim+n_s]; // Optimal s_hat
    double lambda[dim+n_s]; // Optimal lambda
    double mu[dim+n_s]; // Optimal mu
} solution;

#ifdef CONF_MATLAB

void ellipMPC_ADMM_soc(double *pointer_x0, double *pointer_xr, double *pointer_ur, double *r_ellip, double *u_opt, double *pointer_k, double *e_flag, double *z_opt, double *s_opt, double *z_hat_opt, double *s_hat_opt, double *lambda_opt, double *mu_opt);

#else

void ellipMPC_ADMM_soc(double *pointer_x0, double *pointer_xr, double *pointer_ur, double *r_ellip, double *u_opt, int *pointer_k, int *e_flag, solution *sol);

#endif

#endif

// This code is generated by the Spcies toolbox: https://github.com/GepocUS/Spcies

